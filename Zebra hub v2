-- Load Fluent UI library and managers
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create main window
local Window = Fluent:CreateWindow({
    Title = "Zebra hub v2 " .. Fluent.Version,
    SubTitle = "made by Zack",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create toggle GUI (should be created AFTER the Fluent window)
local ToggleGui = Instance.new("ScreenGui")
local Toggle = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local ZebraIcon = Instance.new("ImageLabel")

-- Properties
ToggleGui.Name = "Toggle Gui"
ToggleGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ToggleGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ToggleGui.ResetOnSpawn = false

Toggle.Name = "Toggle"
Toggle.Parent = ToggleGui
Toggle.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0, 80, 0, 38)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Close Gui"
Toggle.TextColor3 = Color3.fromRGB(203, 122, 49)
Toggle.TextSize = 19.000
Toggle.Draggable = true
Toggle.TextXAlignment = Enum.TextXAlignment.Right -- Align text to right to make room for icon

UICorner.Parent = Toggle

-- Add Zebra Icon
ZebraIcon.Name = "ZebraIcon"
ZebraIcon.Parent = Toggle -- Parent to the button
ZebraIcon.BackgroundTransparency = 1
ZebraIcon.Image = "rbxassetid://6031225816" -- Zebra icon
ZebraIcon.Position = UDim2.new(0, 5, 0.5, 0)
ZebraIcon.AnchorPoint = Vector2.new(0, 0.5) -- Center vertically
ZebraIcon.Size = UDim2.new(0, 22, 0, 22)

-- Store the main FluentUI window reference so we can access it
local MainUI

-- Find Fluent UI in CoreGui
for _, v in pairs(game:GetService("CoreGui"):GetChildren()) do
    if v:IsA("ScreenGui") and v:FindFirstChild("Main") then
        local main = v:FindFirstChild("Main")
        if main:FindFirstChild("Topbar") and main:FindFirstChild("TabList") then
            MainUI = v
            break
        end
    end
end

-- Setup toggle button to open/close the Fluent UI
local IsOpen = true
Toggle.MouseButton1Click:Connect(function()
    IsOpen = not IsOpen
    
    -- Update toggle button appearance
    if IsOpen then
        Toggle.Text = "Close Gui"
        ZebraIcon.ImageColor3 = Color3.fromRGB(203, 122, 49)
    else
        Toggle.Text = "Open Gui"
        ZebraIcon.ImageColor3 = Color3.fromRGB(150, 150, 150) -- Dimmed when closed
    end
    
    -- Toggle Fluent UI visibility - check if we found it
    if MainUI then
        MainUI.Enabled = IsOpen
    else
        -- If we couldn't find the Fluent UI directly, let's try the alternative method
        -- This uses Fluent window's built-in Minimize function
        Window:Minimize(not IsOpen)
    end
end)

-- HSV to RGB conversion function
local function HSVtoRGB(h, s, v)
    local i = math.floor(h * 6)
    local f = h * 6 - i
    local p = v * (1 - s)
    local q = v * (1 - f * s)
    local t = v * (1 - (1 - f) * s)
    
    local r, g, b
    if i % 6 == 0 then r, g, b = v, t, p
    elseif i % 6 == 1 then r, g, b = q, v, p
    elseif i % 6 == 2 then r, g, b = p, v, t
    elseif i % 6 == 3 then r, g, b = p, q, v
    elseif i % 6 == 4 then r, g, b = t, p, v
    elseif i % 6 == 5 then r, g, b = v, p, q
    end

    return Color3.new(r, g, b)
end

-- Add subtle animation to the Zebra icon
spawn(function()
    local h = 0
    while wait(0.1) do
        if IsOpen then -- Only animate when open
            h = (h + 0.01) % 1
            ZebraIcon.ImageColor3 = HSVtoRGB(h, 0.5, 1)
        end
    end
end)

-- Tabs
local MainTab = Window:AddTab({ Title = "Main", Icon = "box" })
local SettingsTab = Window:AddTab({ Title = "Settings", Icon = "settings" })
local OthersTab = Window:AddTab({ Title = "Others", Icon = "file-plus" })

-- Managers setup
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:SetFolder("ZebraHub")
InterfaceManager:SetFolder("ZebraHub")
InterfaceManager:BuildInterfaceSection(SettingsTab)
SaveManager:BuildConfigSection(SettingsTab)

-- Notify user
Fluent:Notify({
    Title = "Join our discord!",
    Content = "Make sure to join our discord and subscribe to my channel!",
    Duration = 5
})

-- Tools GUI Button
MainTab:AddButton({
    Title = "Tools Gui",
    Description = "sigma",
    Callback = function()
        local PiggyGui = Instance.new("ScreenGui")
        PiggyGui.Name = "PiggyGui"
        PiggyGui.Parent = game.CoreGui

        local ScrollingFrame = Instance.new("ScrollingFrame", PiggyGui)
        ScrollingFrame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
        ScrollingFrame.Position = UDim2.new(0, 0, 0.42, 0)
        ScrollingFrame.Size = UDim2.new(0, 296, 0, 388)

        local UIGridLayout = Instance.new("UIGridLayout", ScrollingFrame)
        UIGridLayout.CellSize = UDim2.new(0, 90, 0, 90)

        local MinimizeButton = Instance.new("TextButton", PiggyGui)
        MinimizeButton.Size = UDim2.new(0, 50, 0, 25)
        MinimizeButton.Position = UDim2.new(0.42, 0, 0.38, 0)
        MinimizeButton.BackgroundColor3 = Color3.new(1, 0, 0)
        MinimizeButton.Text = "Minimize"
        MinimizeButton.TextColor3 = Color3.new(1, 1, 1)

        local isMinimized = false

        MinimizeButton.MouseButton1Click:Connect(function()
            isMinimized = not isMinimized
            ScrollingFrame.Visible = not isMinimized
            MinimizeButton.Text = isMinimized and "Restore" or "Minimize"
        end)

        coroutine.wrap(function()
            while true do
                wait(1)
                local a = workspace:GetDescendants()
                local items = {}
                local itemframes = ScrollingFrame:GetChildren()

                for _, v in ipairs(itemframes) do
                    if v:IsA("TextButton") then
                        v:Destroy()
                    end
                end

                for _, obj in ipairs(a) do
                    if obj.Name == "ItemPickupScript" and obj.Parent:FindFirstChild("ClickDetector") then
                        table.insert(items, obj.Parent)
                    end
                end

                for i, object in ipairs(items) do
                    local ItemFrame = Instance.new("TextButton", ScrollingFrame)
                    ItemFrame.BackgroundColor3 = Color3.new(1, 1, 1)
                    ItemFrame.BackgroundTransparency = 0.95
                    ItemFrame.Size = UDim2.new(0, 100, 0, 100)
                    ItemFrame.Text = ""

                    local View = Instance.new("ViewportFrame", ItemFrame)
                    View.Size = UDim2.new(1, 0, 1, 0)
                    View.BackgroundTransparency = 1
                    View.BorderSizePixel = 0

                    local clone = object:Clone()
                    clone.Parent = View

                    local cam = Instance.new("Camera")
                    cam.CameraType = Enum.CameraType.Fixed
                    cam.CFrame = CFrame.new(object.Position + Vector3.new(0, 4, 3), object.Position)
                    View.CurrentCamera = cam
                    cam.Parent = View

                    ItemFrame.MouseButton1Down:Connect(function()
                        local char = game.Players.LocalPlayer.Character
                        if char and object:FindFirstChild("ClickDetector") then
                            local root = char:FindFirstChild("HumanoidRootPart")
                            if root then
                                local originalCFrame = root.CFrame
                                root.CFrame = object.CFrame
                                wait(0.1)
                                fireclickdetector(object.ClickDetector)
                                wait(0.3)
                                root.CFrame = originalCFrame
                            end
                        end
                    end)
                end
            end
        end)()
    end
})

-- Other MainTab buttons
MainTab:AddButton({
    Title = "Teleport",
    Description = "Very important button",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/AbDM2er1"))()
    end
})

MainTab:AddButton({
    Title = "Fly",
    Description = "Very important button",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
    end
})

MainTab:AddButton({
    Title = "Invisible",
    Description = "Very important button",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Invisible-script-20557"))()
    end
})

-- OthersTab Buttons
OthersTab:AddButton({
    Title = "Infinite Yield",
    Description = "Very important button",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

OthersTab:AddButton({
    Title = "Nameless Admin",
    Description = "Very important button",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))()
    end
})

MainTab:AddToggle("MyToggle", {
    Title = "esp",
    Description = "Toggle description",
    Default = false,
    Callback = function(state)
        loadstring(game:HttpGet("https://pastebin.com/raw/s7viVmDR"))()
    end
})

-- Finalize tab
Window:SelectTab(MainTab)
